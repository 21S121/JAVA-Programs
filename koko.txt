class Solution 
{
    public boolean isPossibleToEat(int[] arr, int eatingSpeed, int hour) 
    {
        int hr = 0;
        for (int i = arr.length - 1; i >= 0; i--) 
        {
            hr += Math.ceil(arr[i] / (eatingSpeed * 1.0));
            if (hr > hour)
                return false;
        }
        return true;
    }

    public int minEatingSpeed(int[] piles, int h) 
    {
        // Arrays.sort(piles);
        int n = piles.length;
        int si=1;
        int ei=piles[0];
        for(int i=1;i<n;i++)
            ei=Math.max(ei,piles[i]);
        while (si < ei) 
        {
            int eatingSpeed = (si + ei) / 2;
            if (!isPossibleToEat(piles, eatingSpeed, h))
                si = eatingSpeed + 1;
            else
                ei = eatingSpeed;
        }
        return si;
    }
}